# yaml-language-server: $schema=https://json.schemastore.org/github-action.json

name: 'Increment .csproj Version'
description: 'Increments the csproj minor or build version'
branding:
  icon: copy
  color: blue
inputs:
  version-type:
    description: 'Version type - build or minor'
    required: true
    default: 'build'
  csproj-file:
    description: 'Path to .csproj manifest'
    required: true
outputs:
  version-number:
    description: 'The new version number'
    value: ${{ steps.version_increment.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Increment csproj version
      id: version_increment
      shell: pwsh
      run: |         
          [xml]$xml = Get-Content "${{ inputs.csproj-file }}"

          $aversion = ""
          $aversionNode = ""
          $VersionNew = $false
          $test = Get-Content ${{ inputs.csproj-file }}

          if($xml.SelectSingleNode("//Project/PropertyGroup/AssemblyVersion")) {
            $aversionNode = $xml.SelectSingleNode("//Project/PropertyGroup/AssemblyVersion")
          }
          else {
            # Create new node for AssemblyVersion
            $parent = $xml.SelectSingleNode("//Project/PropertyGroup")
            $newElement = $xml.CreateElement("AssemblyVersion")
            $newElement.InnerText = "1.0.0"
            $parent.AppendChild($newElement)
            $aversionNode = $xml.SelectSingleNode("//Project/PropertyGroup/AssemblyVersion")
            $VersionNew = $true
          }

          [Version]$aversion = $aversionNode.InnerText

          if ($versionNew -eq $false) {
            Switch("${{ inputs.version-type }}")
            {
              "build" { $newversion = New-Object Version ([int]$aversion.Major),([int]$aversion.Minor),([int]$aversion.Build + 1) }
              "minor" { $newversion = New-Object Version ([int]$aversion.Major),([int]$aversion.Minor + 1),([int]0) }
              default { $newversion = $aversion }
            }
          }
          else {
            $newversion = $aversion
          }

          # Set new version
          $aversionNode.InnerText = $newversion

          # Save csproj xml file
          $xml.Save("${{ inputs.csproj-file }}") | Out-Null

          Write-Output "::set-output name=version::$newversion"
